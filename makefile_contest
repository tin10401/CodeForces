# Compiler settings
CXX = g++
CXXFLAGS = -std=c++20 -O2

# Default target
.PHONY: run clean

# Extract the problem name (without .cpp extension)
PROBLEM = $(basename $(lastword $(MAKECMDGOALS)))

# Run the selected problem with its corresponding input and compare outputs
run: $(PROBLEM)
	$(CXX) $(CXXFLAGS) -o $(PROBLEM) $(PROBLEM).cpp
	@echo "Running $(PROBLEM) with $(PROBLEM)_input.txt..."
	./$(PROBLEM) < $(PROBLEM)_input.txt > $(PROBLEM)_output.txt
	@if [ -f $(PROBLEM)_expected_output.txt ]; then \
		echo "My_output:"; \
		nl -w 1 -s '. ' $(PROBLEM)_output.txt > $(PROBLEM)_numbered_output.txt; \
		cat $(PROBLEM)_numbered_output.txt; \
		echo "\nExpected_output:"; \
		nl -w 1 -s '. ' $(PROBLEM)_expected_output.txt > $(PROBLEM)_numbered_expected_output.txt; \
		cat $(PROBLEM)_numbered_expected_output.txt; \
		echo "\nDifferences:"; \
		diff --side-by-side --suppress-common-lines $(PROBLEM)_numbered_output.txt $(PROBLEM)_numbered_expected_output.txt | sed 's/^/    /'; \
		if diff -q $(PROBLEM)_output.txt $(PROBLEM)_expected_output.txt > /dev/null; then \
			echo "\nTest passed!"; \
		else \
			echo "\nTest failed!"; \
		fi; \
	else \
		echo "No expected output file $(PROBLEM)_expected_output.txt found."; \
	fi

# Clean the generated files
clean:
	rm -f $(PROBLEM) $(PROBLEM)_output.txt $(PROBLEM)_numbered_output.txt $(PROBLEM)_numbered_expected_output.txt

# Prevent make from treating run and clean as files
%:
	@:

